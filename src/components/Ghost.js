/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: ANDRE (https://sketchfab.com/andrey.sk)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/cloth-ghost-f4fc1cd448c04a809d106975cfa7011b
title: Cloth Ghost
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

export default function Ghost({ angleMultiplier, color, ...props }) {
  const ghostRef = useRef();
  const { nodes, materials } = useGLTF("/ghost/scene.gltf");

  useFrame(({ clock }) => {
    const elapsedTime = clock.getElapsedTime();
    const ghost1Angle = elapsedTime * angleMultiplier;
    ghostRef.current.position.x = Math.cos(ghost1Angle) * 8;
    ghostRef.current.position.y = Math.sin(ghost1Angle * 2);
    ghostRef.current.position.z = Math.sin(ghost1Angle) * 3;
  });

  return (
    <>
      <group ref={ghostRef} {...props} dispose={null}>
        <group rotation={[-Math.PI / 2, 0, 0]}>
          <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
            <group
              position={[-100.12, 253.02, 141.63]}
              rotation={[0, 1, -0.09]}
            />
            <group position={[1.34, 216.01, 3.13]}>
              <mesh
                geometry={nodes.ee_obj_1_Mat_0.geometry}
                material={materials.material}
              />
              <mesh
                geometry={nodes.ee_obj_1_Mat1_0.geometry}
                material={materials["Mat.1"]}
              />

              <pointLight
                args={[color, 2, 3]}
                castShadow
                shadow-mapSize-height={512}
                shadow-mapSize-width={512}
              />
            </group>
          </group>
        </group>
      </group>
    </>
  );
}

useGLTF.preload("/scene.gltf");
